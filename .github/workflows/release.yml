name: release-pipeline
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release Version"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check if version tag already exists
        id: tag
        run: git show-ref --tags --verify --quiet -- "refs/tags/v${{ github.event.inputs.version }}" && echo "::set-output name=exists::1" || echo "::set-output name=exists::0"
      - name: Fail if version tag already exists
        if: steps.tag.outputs.exists == 1
        uses: actions/github-script@v3
        with:
          script: core.setFailed('Version v${{ github.event.inputs.version }} was released already')
      - name: Read changelogs
        id: changelogs
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ github.event.inputs.version }}
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: "gradle"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Assemble jars
        run: ./gradlew -Pversion=${{ github.event.inputs.version }} jar javadocJar sourcesJar
      - name: Publish to Maven Central
        run: ./gradlew -Pversion=${{ github.event.inputs.version }} publishToSonatype closeSonatypeStagingRepository -x jar -x javadocJar -x sourcesJar
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      - name: Create new release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          body: ${{ steps.changelogs.outputs.changes }}
          files: build/libs/*.jar
